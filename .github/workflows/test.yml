on:
  push:
    branches:
      - test

jobs:
  get_new_semantic_version:
    name: Get new semantic version
    # needs: qa_sign_off
    runs-on: ubuntu-latest
    permissions: read-all
    outputs:
      previous_tag: ${{ steps.previous.outputs.previous_tag }}
      version_tag: ${{ steps.version.outputs.version_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get the last tag name
        id: previous
        run: echo "previous_tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

      - name: Get new version
        uses: paulhatch/semantic-version@v5.1.0
        id: version
        with:
          tag_prefix: 'v'
          major_pattern: '(MAJOR)'
          minor_pattern: 'feat:'

  release_tag:
    name: Release Tag
    needs: get_new_semantic_version
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Generate a release
        run: |
          changes=$(gh api \
          --method POST \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/${{ inputs.repo }}/releases/generate-notes \
          -f tag_name='${{ env.NEW_VERSION_TAG }}' \
          -f target_commitish='main' \
          -f previous_tag_name='${{ env.PREVIOUS_TAG }}' | jq -r '.body')
        
          gh api \
          --method POST \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/${{ inputs.repo }}/releases \
          -f tag_name='${{ env.NEW_VERSION_TAG }}' \
          -f target_commitish='main' \
          -f name='${{ env.NEW_VERSION_TAG }}' \
          -f body="$changes"
        env:
          PREVIOUS_TAG: ${{ needs.get_new_semantic_version.outputs.previous_tag }}
          NEW_VERSION_TAG: ${{ needs.get_new_semantic_version.outputs.version_tag }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}